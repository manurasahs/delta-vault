/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.14.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.manurasahs.deltavault.port.adapter.clientrest.resources.api;

import io.manurasahs.deltavault.port.adapter.clientrest.resources.model.InputValidationProblem;
import java.util.Map;
import io.manurasahs.deltavault.port.adapter.clientrest.resources.model.SimpleInfoMessage;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.lang.Nullable;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.14.0")
@Validated
public interface FileStorageApi {

    /**
     * GET /api/v1/files/{fileName} : Get JSON file at a specific version.
     *
     * @param fileName File name. (required)
     * @param version  (optional, default to latest)
     * @return JSON at requested version. (status code 200)
     *         or Bad request (4xx) (status code 400)
     *         or Bad request (4xx) (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/v1/files/{fileName}",
        produces = { "application/json", "application/problem+json" }
    )
    
    ResponseEntity<Map<String, Object>> downloadFile(
         @PathVariable("fileName") String fileName,
         @Valid @RequestParam(value = "version", required = false, defaultValue = "latest") String version
    );


    /**
     * PUT /api/v1/files/{fileName} : Upsert JSON file.
     *
     * @param fileName File name. (required)
     * @param requestBody  (required)
     * @return OK (status code 200)
     *         or Bad request (4xx) (status code 400)
     */
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/api/v1/files/{fileName}",
        produces = { "application/json", "application/problem+json" },
        consumes = { "application/json" }
    )
    
    ResponseEntity<SimpleInfoMessage> upsertFile(
         @PathVariable("fileName") String fileName,
         @Valid @RequestBody Map<String, Object> requestBody
    );

}
